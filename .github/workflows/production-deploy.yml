name: Deploy to Production
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to deploy (number)'
        required: true

env:
  REGISTRY_ID: crperh81ttnqgnsobd6c
  APP_NAME: app
  VM_IP: 51.250.29.116
  SSH_USER: olechkakulic

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
     - name: Authenticate and check image
       env:
        YC_SA_KEY: ${{ secrets.YC_SA_KEY }}  # Должен содержать ВЕСЬ JSON ключа
       run: |
        # Сохраняем ключ из секретов
        echo "$YC_SA_KEY" > key.json
        
        # Проверяем, что файл содержит валидный JSON
        if ! jq -e .private_key key.json >/dev/null; then
          echo "::error::Invalid service account key format!"
          exit 1
        fi
        
        # Извлекаем приватный ключ
        jq -r .private_key key.json > key.pem
        
        # Логинимся в Container Registry
        if ! docker login --username iam --password-stdin cr.yandex < key.pem; then
          echo "::error::Docker login failed!"
          exit 1
        fi
        
        # Проверяем наличие образа
        if ! docker manifest inspect cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:13_latest; then
          echo "::error::Image not found in registry!"
          exit 1
        fi

      - name: Deploy to VM
        env:
          SSH_KEY: ${{ secrets.VM_SSH_KEY }}
        run: |
          echo "$SSH_KEY" > ssh_key
          chmod 600 ssh_key
          
          ssh -i ssh_key -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.VM_IP }} "
            # Pull and run new container
            docker stop app || true
            docker rm app || true
            docker pull cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_latest
            docker run -d -p 80:3000 --name app cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_latest
          "

      - name: Add Deployment Comment to Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment ${{ github.event.inputs.release_version }} \
            --body "**Выкачено в прод:** $(date +'%Y-%m-%d %H:%M')
                    **Версия:** ${{ github.event.inputs.release_version }}
                    **Запустил:** ${{ github.actor }}
                    **Образ:** cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_latest"
