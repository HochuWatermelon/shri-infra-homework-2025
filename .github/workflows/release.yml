name: Release
on: 
  workflow_dispatch:

env:
  REGISTRY_ID: crperh81ttnqgnsobd6c
  APP_NAME: app

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run checks
        run: |
          npm run lint
          npm run test
      - name: Install Yandex Cloud CLI
        run: |
          # Устанавливаем yc
          curl -s https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          # Добавляем yc в PATH
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH
          # Проверяем установку
          yc --version

      - name: Configure Docker
        run: |
          # Авторизуемся в Yandex Cloud
          echo "${{ secrets.YC_SA_KEY }}" > key.json
          yc config set service-account-key key.json
          # Настраиваем Docker
          yc container registry configure-docker
          echo "::add-mask::$(yc config get token)"
          
      - name: Build and Push Docker Image
        run: |
          VERSION=${{ github.run_number }}
          docker build -t cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:$VERSION .
          docker tag cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:$VERSION cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${VERSION}_latest
          docker push cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:$VERSION
          docker push cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${VERSION}_latest

      - name: Create Release Branch
        run: |
          git checkout -b releases/${{ github.run_number }}
          git push origin releases/${{ github.run_number }}

      - name: Create Git Tag
        run: |
          git tag -a v${{ github.run_number }} -m "Release v${{ github.run_number }}"
          git push origin v${{ github.run_number }}

      - name: Update CHANGELOG.md
        run: |
          echo "# v${{ github.run_number }} ($(date +'%Y-%m-%d'))" > CHANGELOG.md
          echo "**Автор:** ${{ github.actor }}" >> CHANGELOG.md
          git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 || echo "")..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          cat CHANGELOG.md >> CHANGELOG.tmp
          mv CHANGELOG.tmp CHANGELOG.md
          git add CHANGELOG.md
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git commit -m "Update CHANGELOG for v${{ github.run_number }}"
          git push

      - name: Create GitHub Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMITS=$(git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 || echo "")..HEAD)
          gh issue create \
            --title "Release v${{ github.run_number }}" \
            --body "**Дата:** $(date +'%Y-%m-%d %H:%M')
                    **Автор:** ${{ github.actor }}
                    **Версия:** ${{ github.run_number }}
                    **Docker Image:** cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.run_number }}
                    **Изменения:**
                    $COMMITS"
