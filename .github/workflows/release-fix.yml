name: Fix Release
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version for fix bags'
        required: true

env:
  REGISTRY_ID: crperh81ttnqgnsobd6c
  APP_NAME: app

jobs:
  fix_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run checks
        run: |
          npm run lint
          npm run test

      - name: Install Yandex Cloud CLI
        run: |
              curl -s https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
              echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH
              $HOME/yandex-cloud/bin/yc --version

      - name: Configure Docker
        run: |
          $HOME/yandex-cloud/bin/yc config set service-account-key <(echo '${{ secrets.YC_SA_KEY }}')
          $HOME/yandex-cloud/bin/yc container registry configure-docker
          echo "::add-mask::$($HOME/yandex-cloud/bin/yc config get token)"

      - name: Build and Push Docker Image
        run: |
          FIX_VERSION=${{ github.run_number }}
          docker build -t cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_fix$FIX_VERSION .
          docker tag cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_fix$FIX_VERSION \
                     cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_latest
          docker push cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_fix$FIX_VERSION
          docker push cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_latest

      - name: Create Fix Tag
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a v${{ github.event.inputs.release_version }}_fix${{ github.run_number }} \
                    -m "Fix ${{ github.run_number }} for release v${{ github.event.inputs.release_version }}"
          git push origin v${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
      - name: Add Comment to Release Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          
          ISSUE_NUMBER=$(gh issue list --search "Release v${{ github.event.inputs.release_version }}" --json number -q '.[0].number')
          
          if [ -z "$ISSUE_NUMBER" ]; then
            echo "Issue for release v${{ github.event.inputs.release_version }} not found!"
            exit 0
          fi
      
          COMMITS=$(git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 | grep -v fix || echo "")..HEAD)
          gh issue comment $ISSUE_NUMBER \
            --body "**Фикс выпущен:** $(date +'%Y-%m-%d %H:%M')
                    **Автор фикса:** ${{ github.actor }}
                    **Версия фикса:** ${{ github.run_number }}
                    **Docker Image:** cr.yandex/${{ env.REGISTRY_ID }}/${{ env.APP_NAME }}:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
                    **Изменения:**
                    $COMMITS"
